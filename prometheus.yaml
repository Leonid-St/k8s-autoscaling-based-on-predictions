apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
    scrape_configs:
      - job_name: 'simple-app'
        static_configs:
          - targets: ['simple-app.default.svc.cluster.local:80']  
      - job_name: 'kube-state-metrics'
        static_configs:
          - targets: ['kube-state-metrics:8080']
      - job_name: 'node-exporter'
        static_configs:
          - targets: ['node-exporter:9100']
      - job_name: 'alertmanager'
        static_configs:
          - targets: ['prometheus-alertmanager:9093']
      - job_name: 'nginx-prometheus-exporter'
        static_configs:
          - targets: ['nginx-prometheus-exporter:9113']


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus:latest
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: config-volume
              mountPath: /etc/prometheus
          args:
            - "--config.file=/etc/prometheus/prometheus.yml"
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
      volumes:
        - name: config-volume
          configMap:
            name: prometheus-config

---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
spec:
  ports:
    - port: 9090
      targetPort: 9090
  selector:
    app: prometheus

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-alertmanager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus-alertmanager
  template:
    metadata:
      labels:
        app: prometheus-alertmanager
    spec:
      containers:
        - name: alertmanager
          image: prom/alertmanager:latest
          ports:
            - containerPort: 9093
          args:
            - "--config.file=/etc/alertmanager/config.yml"
          volumeMounts:
            - name: alertmanager-config
              mountPath: /etc/alertmanager
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "200m"
      volumes:
        - name: alertmanager-config
          configMap:
            name: alertmanager-config

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: alertmanager-config
data:
  config.yml: |
    global:
      resolve_timeout: 5m
    route:
      group_by: ['alertname']
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 3h
      receiver: 'default-receiver'
    receivers:
      - name: 'default-receiver'
        webhook_configs:
          - url: 'http://example.com'

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-state-metrics
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kube-state-metrics
  template:
    metadata:
      labels:
        app: kube-state-metrics
    spec:
      containers:
        - name: kube-state-metrics
          image: quay.io/coreos/kube-state-metrics:latest
          ports:
            - containerPort: 8080
          resources:
            requests:
              memory: "64Mi"
              cpu: "100m"
            limits:
              memory: "128Mi"
              cpu: "200m"

---
apiVersion: v1
kind: Service
metadata:
  name: kube-state-metrics
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: kube-state-metrics

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: node-exporter
spec:
  selector:
    matchLabels:
      app: node-exporter
  template:
    metadata:
      labels:
        app: node-exporter
    spec:
      containers:
        - name: node-exporter
          image: prom/node-exporter:latest
          ports:
            - containerPort: 9100
          args:
            - "--path.rootfs=/host"
          volumeMounts:
            - name: host
              mountPath: /host
          resources:
            requests:
              memory: "64Mi"
              cpu: "100m"
            limits:
              memory: "128Mi"
              cpu: "200m"
      volumes:
        - name: host
          hostPath:
            path: /
